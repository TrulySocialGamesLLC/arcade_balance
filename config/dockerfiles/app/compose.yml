version: '3.4'

volumes:
  live-certs:

networks:
  pmm:
    external: true
  elk:
    external: true

services:
  app:
    networks:
      - default
      - arcade-balance-db
      - elk
    environment:
      - SERVICE_PORTS=80
      - MIX_ENV=prod
      - ENABLE_ROLLBAR=true
      - LOG_LEVEL=info
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=weallalive137
      - POSTGRES_DB=arcade-balance-db
      - ORIGIN_URL=//arcade-balance.production.server-planet-gold-rush.com
      - VIRTUAL_HOST=http://arcade-balance.production.server-planet-gold-rush.com/*,https://arcade-balance.production.server-planet-gold-rush.com/*

      - DOCKERCLOUD_CONTAINER_HOSTNAME=app-{{.Task.Slot}}
    image: 'planetgr/arcade-balance:v0.0.1'
    ports:
      - '80'
    restart: always
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.app == true
          - node.labels.cluster-name == arcade

  arcade-balance-db:
    networks:
      - default
    environment:
      - POSTGRES_PASSWORD=weallalive137
      - POSTGRES_USER=root
    image: 'postgres'
    ports:
      - '5432'
    restart: always
    volumes:
      - /var/lib/data/arcade-balance-db/postgresql:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.db == true
          - node.labels.cluster-name == arcade

  letsencrypt:
    networks:
      - default
    environment:
      - DOMAINS=arcade-balance.production.server-planet-gold-rush.com
      - EMAIL=admin@one1eleven.com
      - EXCLUDE_BASIC_AUTH=true
      - LOAD_BALANCER_SERVICE_NAME=web-balancer
      - SERVICE_PORTS=80
      - VIRTUAL_HOST=http://*/.well-known/acme-challenge/*
      - VIRTUAL_HOST_WEIGHT=100000
    image: 'yard/letsencrypt:latest'
    volumes:
      - live-certs:/etc/letsencrypt
    deploy:
      placement:
        constraints:
          - node.labels.balancer == true
          - node.labels.cluster-name == arcade-balance

  web-balancer:
    networks:
      - default
    environment:
      - 'OPTION=redispatch, httplog, dontlognull, forwardfor, httpclose'
    image: 'planetgr/haproxy:latest'
    links:
      - app
      - letsencrypt
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - live-certs:/etc/letsencrypt:rw
    deploy:
      placement:
        constraints:
          - node.labels.balancer == true
          - node.labels.cluster-name == arcade-balance